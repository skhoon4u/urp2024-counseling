{"ast":null,"code":"var _jsxFileName = \"/Users/seongyeonghun/coding/Web/urp2024/web/frontend/src/Chat.js\",\n  _s = $RefreshSig$();\n// frontend/src/Chat.js\nimport React, { useState } from \"react\";\nimport axios from \"./axiosConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: input,\n      timestamp: new Date().toISOString()\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      const res = await axios.post(\"/chat\", {\n        message: input\n      });\n      const botMessage = {\n        sender: \"bot\",\n        text: res.data.response,\n        timestamp: new Date().toISOString()\n      };\n      setMessages([...messages, userMessage, botMessage]);\n    } catch (err) {\n      console.error(\"챗봇과의 통신 오류:\", err);\n      const errorMessage = {\n        sender: \"bot\",\n        text: \"죄송합니다. 문제가 발생했습니다.\",\n        timestamp: new Date().toISOString()\n      };\n      setMessages([...messages, userMessage, errorMessage]);\n    }\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"600px\",\n      margin: \"auto\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uCC57\\uBD07\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: \"10px\",\n        height: \"400px\",\n        overflowY: \"scroll\"\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === \"user\" ? \"right\" : \"left\",\n          margin: \"10px 0\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: \"inline-block\",\n            padding: \"10px\",\n            borderRadius: \"10px\",\n            backgroundColor: msg.sender === \"user\" ? \"#daf8cb\" : \"#f1f0f0\"\n          },\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      style: {\n        display: \"flex\",\n        marginTop: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n        style: {\n          flex: 1,\n          padding: \"10px\",\n          boxSizing: \"border-box\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: \"10px\"\n        },\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","sendMessage","e","preventDefault","trim","userMessage","sender","text","timestamp","Date","toISOString","res","post","message","botMessage","data","response","err","console","error","errorMessage","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","border","height","overflowY","map","msg","index","textAlign","display","borderRadius","backgroundColor","onSubmit","marginTop","type","value","onChange","target","placeholder","flex","boxSizing","_c","$RefreshReg$"],"sources":["/Users/seongyeonghun/coding/Web/urp2024/web/frontend/src/Chat.js"],"sourcesContent":["// frontend/src/Chat.js\nimport React, { useState } from \"react\";\nimport axios from \"./axiosConfig\";\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    const userMessage = {\n      sender: \"user\",\n      text: input,\n      timestamp: new Date().toISOString(),\n    };\n    setMessages([...messages, userMessage]);\n\n    try {\n      const res = await axios.post(\"/chat\", { message: input });\n      const botMessage = {\n        sender: \"bot\",\n        text: res.data.response,\n        timestamp: new Date().toISOString(),\n      };\n      setMessages([...messages, userMessage, botMessage]);\n    } catch (err) {\n      console.error(\"챗봇과의 통신 오류:\", err);\n      const errorMessage = {\n        sender: \"bot\",\n        text: \"죄송합니다. 문제가 발생했습니다.\",\n        timestamp: new Date().toISOString(),\n      };\n      setMessages([...messages, userMessage, errorMessage]);\n    }\n\n    setInput(\"\");\n  };\n\n  return (\n    <div style={{ maxWidth: \"600px\", margin: \"auto\", padding: \"20px\" }}>\n      <h2>챗봇</h2>\n      <div\n        style={{\n          border: \"1px solid #ccc\",\n          padding: \"10px\",\n          height: \"400px\",\n          overflowY: \"scroll\",\n        }}\n      >\n        {messages.map((msg, index) => (\n          <div\n            key={index}\n            style={{\n              textAlign: msg.sender === \"user\" ? \"right\" : \"left\",\n              margin: \"10px 0\",\n            }}\n          >\n            <span\n              style={{\n                display: \"inline-block\",\n                padding: \"10px\",\n                borderRadius: \"10px\",\n                backgroundColor: msg.sender === \"user\" ? \"#daf8cb\" : \"#f1f0f0\",\n              }}\n            >\n              {msg.text}\n            </span>\n          </div>\n        ))}\n      </div>\n      <form\n        onSubmit={sendMessage}\n        style={{ display: \"flex\", marginTop: \"10px\" }}\n      >\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"메시지를 입력하세요...\"\n          style={{ flex: 1, padding: \"10px\", boxSizing: \"border-box\" }}\n        />\n        <button type=\"submit\" style={{ padding: \"10px\" }}>\n          전송\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}