{"ast":null,"code":"// frontend/src/axiosConfig.js\nimport axios from \"axios\";\n\n// 인스턴스 생성\nconst instance = axios.create({\n  baseURL: \"http://localhost:3001/api\" // 백엔드 서버의 주소와 포트\n});\n\n// 요청 인터셉터 추가\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// 응답 인터셉터 추가\ninstance.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 401) {\n    // 토큰이 유효하지 않거나 만료되었을 때 로그아웃 처리\n    localStorage.removeItem(\"token\");\n    alert(\"세션이 만료되었습니다. 다시 로그인해주세요.\");\n    // 로그인 페이지로 리디렉션\n    window.location.href = \"/login\";\n  }\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","response","status","removeItem","alert","window","location","href"],"sources":["/Users/seongyeonghun/coding/Web/urp2024/web/frontend/src/axiosConfig.js"],"sourcesContent":["// frontend/src/axiosConfig.js\nimport axios from \"axios\";\n\n// 인스턴스 생성\nconst instance = axios.create({\n  baseURL: \"http://localhost:3001/api\", // 백엔드 서버의 주소와 포트\n});\n\n// 요청 인터셉터 추가\ninstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// 응답 인터셉터 추가\ninstance.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response && error.response.status === 401) {\n      // 토큰이 유효하지 않거나 만료되었을 때 로그아웃 처리\n      localStorage.removeItem(\"token\");\n      alert(\"세션이 만료되었습니다. 다시 로그인해주세요.\");\n      // 로그인 페이지로 리디렉션\n      window.location.href = \"/login\";\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE,2BAA2B,CAAE;AACxC,CAAC,CAAC;;AAEF;AACAF,QAAQ,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAX,QAAQ,CAACG,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC/BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnD;IACAP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCC,KAAK,CAAC,0BAA0B,CAAC;IACjC;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}