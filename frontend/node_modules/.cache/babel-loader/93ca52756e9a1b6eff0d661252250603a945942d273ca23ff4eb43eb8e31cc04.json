{"ast":null,"code":"var _jsxFileName = \"/Users/seongyeonghun/coding/Web/urp2024/web/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Chat from \"./Chat\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 인증 상태를 관리하는 state\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem(\"token\"));\n\n  // 로컬 스토리지의 토큰 변경을 감지하여 인증 상태 업데이트\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setIsAuthenticated(!!localStorage.getItem(\"token\"));\n    };\n    window.addEventListener(\"storage\", handleStorageChange);\n    return () => {\n      window.removeEventListener(\"storage\", handleStorageChange);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"\\uCC57\\uBD07\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Chat, {\n            setIsAuthenticated: setIsAuthenticated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 34\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Login, {\n            setIsAuthenticated: setIsAuthenticated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"v4MJQ+MMYnUwYxfHo5bZWg/6o0o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Chat","Signup","Login","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","localStorage","getItem","handleStorageChange","window","addEventListener","removeEventListener","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","replace","_c","$RefreshReg$"],"sources":["/Users/seongyeonghun/coding/Web/urp2024/web/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from \"react-router-dom\";\nimport Chat from \"./Chat\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\n\nfunction App() {\n  // 인증 상태를 관리하는 state\n  const [isAuthenticated, setIsAuthenticated] = useState(\n    !!localStorage.getItem(\"token\")\n  );\n\n  // 로컬 스토리지의 토큰 변경을 감지하여 인증 상태 업데이트\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setIsAuthenticated(!!localStorage.getItem(\"token\"));\n    };\n\n    window.addEventListener(\"storage\", handleStorageChange);\n\n    return () => {\n      window.removeEventListener(\"storage\", handleStorageChange);\n    };\n  }, []);\n\n  return (\n    <Router>\n      <div>\n        <h1 style={{ textAlign: \"center\" }}>챗봇</h1>\n        <Routes>\n          {/* 메인 페이지: 인증된 사용자는 Chat, 그렇지 않으면 Login으로 리디렉션 */}\n          <Route\n            path=\"/\"\n            element={\n              isAuthenticated ? (\n                <Chat setIsAuthenticated={setIsAuthenticated} />\n              ) : (\n                <Navigate to=\"/login\" replace />\n              )\n            }\n          />\n\n          {/* 회원가입 페이지: 인증되지 않은 사용자만 접근 가능 */}\n          <Route\n            path=\"/signup\"\n            element={\n              !isAuthenticated ? <Signup /> : <Navigate to=\"/\" replace />\n            }\n          />\n\n          {/* 로그인 페이지: 인증되지 않은 사용자만 접근 가능 */}\n          <Route\n            path=\"/login\"\n            element={\n              !isAuthenticated ? (\n                <Login setIsAuthenticated={setIsAuthenticated} />\n              ) : (\n                <Navigate to=\"/\" replace />\n              )\n            }\n          />\n\n          {/* 모든 기타 경로는 메인 페이지로 리디렉션 */}\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}